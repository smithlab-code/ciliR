activity_maps <- function(CiliaSummary, grid_size, min, max, ncol_facet) {
  library(ggplot2)
  library(reshape2)
  library(cowplot)

  # Initialize an empty list to store plots
  plot_list <- list()

  # Loop over all columns in the DataFrame
  for (column_number in 1:ncol(CiliaSummary)) {
    # Select the current column
    selected_column <- CiliaSummary[, column_number]
    column_name <- names(CiliaSummary)[column_number]  # Get the name of the current column

    # Reshape the data to fit into the specified grid size
    data_length <- grid_size * grid_size
    selected_data <- head(selected_column, data_length)
    length(selected_data) <- data_length  # Pad with NAs if necessary

    # Convert the vector to a matrix
    matrix_data <- matrix(selected_data, nrow = grid_size, ncol = grid_size, byrow = TRUE)

    # Melt the matrix into a long format for ggplot
    grid_data <- melt(matrix_data)
    grid_data$variable <- column_name  # Add a column for the variable name

    # Store the grid data in the list
    plot_list[[column_number]] <- grid_data
  }

  # Combine all grid data into a single DataFrame
  combined_data <- do.call(rbind, plot_list)

  # Plotting the heatmaps with facet_wrap
  p <- ggplot(combined_data, aes(X1, X2, fill = value)) + ### rename X1: Var1 etc if code fails
    geom_tile() +
    scale_fill_viridis_c(name = "CBF [Hz]", limits = c(min, max), oob = scales::squish) +
    facet_wrap(~ variable, ncol = ncol_facet) +
    labs(x = "x [ROI]", y = "y [ROI]") +
    theme_minimal() +
    theme(panel.grid = element_blank())

  # Return the plot
  return(p)
}


# Example usage
# Generate the heatmap for the 3rd column with a grid size of 80x80, min = 0 Hz, max = 15 Hz
activity_maps(CiliaSummary, 80, 0, 15, 8)

last_plot() + theme_classic(base_size = 12) + theme(legend.position = "right") + theme(legend.direction = "vertical")
